# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

env:
 SONAR_TOKEN : ${{secrets.SONAR_TOKEN}}
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: SonarCloud Scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      uses: SonarSource/sonarcloud-github-action@v1.6
      #with:
        # Additional arguments to the sonarcloud scanner
        #args: # optional
        # Set the sonar.projectBaseDir analysis property
        #projectBaseDir: # optional, default is .
    - name: Codacy Coverage Reporter
      # You may pin to the exact commit or the version.
      # uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      #with:
        # API project token to retrieve your remote Codacy configuration for the project being analyzed
        #project-token: # optional
        # API account token to retrieve your remote Codacy configuration for the project being analyzed
        #api-token: # optional
        # Optional comma separated list of coverage reports to send to Codacy
        #coverage-reports: # optional, default is 
        # Optionally force associating a language with your coverage report
        #language: # optional
        # Optionally force using a specific coverage report parser
        #force-coverage-parser: # optional
